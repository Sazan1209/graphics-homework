#version 430
#extension GL_GOOGLE_include_directive : require

#include "tonemap.glsl"

layout(local_size_x = 32, local_size_y = 32) in;

shared uint localMin;
shared uint localMax;

layout(binding = 0, r11f_g11f_b10f) restrict readonly uniform image2D image;
layout(binding = 1, std430) coherent buffer A
{
  uint minLum;
  uint maxLum;
  uint cumDist[bucketCount];
};


void main()
{
  const uvec2 size = imageSize(image);
  if (size.x <= gl_GlobalInvocationID.x || size.y <= gl_GlobalInvocationID.y)
  {
    return;
  }
  const uint ind = gl_LocalInvocationIndex;
  if (ind == 0)
  {
    localMin = -1;
    localMax = 0;
    atomicCompSwap(minLum, 0, uint(-1));
  }
  barrier();
  memoryBarrier();

  const vec3 pixel = imageLoad(image, ivec2(gl_GlobalInvocationID.xy)).xyz;
  const float lum = dot(pixel, lumVec);
  atomicMax(localMax, floatBitsToUint(lum));
  atomicMin(localMin, floatBitsToUint(lum));

  barrier();
  memoryBarrierShared();
  if (ind == 0)
  {
    atomicMax(maxLum, localMax);
    atomicMin(minLum, max(localMin, floatBitsToUint(minEyeLum)));
  }
}

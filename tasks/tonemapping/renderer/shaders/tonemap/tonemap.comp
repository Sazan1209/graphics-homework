#version 430
#extension GL_GOOGLE_include_directive : require

#include "tonemap.glsl"

layout(local_size_x = 32, local_size_y = 32) in;

layout(binding = 0, r11f_g11f_b10f) restrict uniform image2D image;
layout(binding = 1, std430) buffer A
{
  float minLum;
  float maxLum;
  uint cumDist[bucketCount];
};

uint bucketFromLum(float lum)
{
  float minB = log(minLum);
  float maxB = log(maxLum);
  float dB = (maxB - minB) / bucketCount;

  const float b = log(lum);
  return min(uint(floor((b - minB) / dB)), bucketCount - 1);
}

void main()
{
  const ivec2 size = imageSize(image);
  if (size.x <= gl_GlobalInvocationID.x || size.y <= gl_GlobalInvocationID.y)
  {
    return;
  }
  vec3 pixel = imageLoad(image, ivec2(gl_GlobalInvocationID.xy)).xyz;

  const float lum = dot(pixel, lumVec);
  const uint ind = bucketFromLum(lum);
  const float distr = float(cumDist[ind]) / float(size.x * size.y);
  const float resB = minScreenB + (maxScreenB - minScreenB) * distr;
  pixel = pixel * exp(resB) / lum;
  imageStore(image, ivec2(gl_GlobalInvocationID.xy), vec4(pixel, 1.0));
}
